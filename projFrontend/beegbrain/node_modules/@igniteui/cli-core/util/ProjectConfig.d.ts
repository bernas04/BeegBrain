import { Config } from "../types/Config";
export declare class ProjectConfig {
    static configFile: string;
    static readonly defaults: Config;
    private static schemaPath;
    /** Returns true if there's a CLI config file in the current working directory */
    static hasLocalConfig(): boolean;
    /**
     * Get effective CLI configuration (merged defaults, global and local)
     * @param global return only global values
     */
    static getConfig(global?: boolean): Config;
    /**
     * Write a configuration file (either local or global) with given `Config` object.
     * Will create or overwrite.
     * @param config Config object to set
     * @param global Set global values instead
     */
    static setConfig(config: Config, global?: boolean): void;
    /*** Get local configuration only */
    static localConfig(): Config;
    /*** Get global configuration only */
    static globalConfig(): Config;
    /*** Validates if provided value could be set to provided property against provided schema */
    static validateProperty(property: any, value: any): {
        message: string;
        valid: boolean;
        value: string;
    };
    static getSchema(): any;
}
