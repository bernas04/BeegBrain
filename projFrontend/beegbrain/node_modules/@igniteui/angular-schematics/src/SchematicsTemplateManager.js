"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchematicsTemplateManager = void 0;
const angular_templates_1 = require("@igniteui/angular-templates");
const cli_core_1 = require("@igniteui/cli-core");
const path = require("path");
class SchematicsTemplateManager extends cli_core_1.BaseTemplateManager {
    constructor() {
        super("");
        this.frameworks.push({
            id: "angular",
            name: "angular",
            projectLibraries: [
                require("@igniteui/angular-templates").default
            ]
        });
    }
    loadFromConfig(filePath) {
        let template = null;
        if (cli_core_1.Util.fileExists(filePath)) {
            const rootPath = path.dirname(filePath);
            const settings = require(filePath);
            switch (`${settings.framework}|${settings.projectType}`) {
                case "angular|igx-ts":
                    template = new angular_templates_1.IgniteUIForAngularTemplate(rootPath);
                    break;
                default:
                    // not supported in schematics, ignore
                    break;
            }
            if (template !== null) {
                Object.assign(template, settings);
            }
        }
        return template; // TODO
    }
}
exports.SchematicsTemplateManager = SchematicsTemplateManager;
