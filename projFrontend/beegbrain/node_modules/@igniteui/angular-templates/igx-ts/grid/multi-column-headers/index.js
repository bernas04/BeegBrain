"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const IgniteUIForAngularTemplate_1 = require("../../../IgniteUIForAngularTemplate");
class IgxMultiColumnHeadersTemplate extends IgniteUIForAngularTemplate_1.IgniteUIForAngularTemplate {
    constructor() {
        super(__dirname);
        this.userExtraConfiguration = {};
        this.components = ["Grid"];
        this.controlGroup = "Grids & Lists";
        this.listInComponentTemplates = true;
        this.id = "grid-multi-column-headers";
        this.projectType = "igx-ts";
        this.name = "Multi Column Headers";
        this.description = "IgxGrid with multiple header columns.";
        this.dependencies = [
            { import: "IgxGridModule", from: "<%=igxPackage%>" },
            { import: "IgxCheckboxModule", from: "<%=igxPackage%>" },
            { import: "FormsModule", from: "@angular/forms" }
        ];
        this.hasExtraConfiguration = true;
    }
    setExtraConfiguration(extraConfigKeys) {
        this.userExtraConfiguration = extraConfigKeys;
    }
    getExtraConfiguration() {
        return [{
                choices: ["Sorting", "Filtering", "Resizing", "Paging", "Column Pinning", "Moving"],
                default: "",
                key: "columnFeatures",
                message: "Choose features for the igx-grid",
                type: 1 /* MultiChoice */
            }];
    }
    generateConfig(name, ...options) {
        const columnFeatures = [];
        const columnBoolFeatures = [];
        const gridFeatures = [];
        /** starts with empty string to create a new line on join when something else is added */
        const additionalElements = [""];
        let additionalMarkup = "";
        const checkBoxBind = `[checked]="cell.value" [disabled]="true"`;
        let selectedFeatures = "";
        if (this.userExtraConfiguration["columnFeatures"]) {
            const features = this.userExtraConfiguration["columnFeatures"];
            for (const feature of this.userExtraConfiguration["columnFeatures"]) {
                switch (feature) {
                    case "Sorting":
                    case "Filtering":
                    case "Resizing":
                    case "Moving":
                        const text = `[${feature.toLowerCase().replace("ing", "able")}]="true"`;
                        columnFeatures.push(text);
                        columnBoolFeatures.push(text);
                        break;
                    case "Row Selection":
                        const gridFeatureText = `rowSelection="multiple"`;
                        gridFeatures.push(gridFeatureText);
                        break;
                    case "Paging":
                        additionalElements.push(`  <igx-paginator></igx-paginator>`);
                        break;
                }
            }
            selectedFeatures = features.join(", ");
            additionalMarkup = additionalElements.join("\n");
        }
        const extraConfig = {
            additionalMarkup,
            checkBoxBind,
            selectedFeatures,
            columnBoolFeatures: columnBoolFeatures.join(" "),
            columnFeatures: columnFeatures.join(" "),
            gridFeatures: gridFeatures.join(" ")
        };
        return super.generateConfig(name, { extraConfig });
    }
}
module.exports = new IgxMultiColumnHeadersTemplate();
