"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const UpdateChanges_1 = require("../common/UpdateChanges");
const version = '9.1.0';
exports.default = () => (host, context) => __awaiter(void 0, void 0, void 0, function* () {
    context.logger.info(`Applying migration for Ignite UI for Angular to version ${version}`);
    const update = new UpdateChanges_1.UpdateChanges(__dirname, host, context);
    update.addValueTransform('rowSelectable_is_deprecated', (args) => {
        if (args.bindingType === UpdateChanges_1.InputPropertyType.EVAL) {
            switch (args.value) {
                case 'true':
                    args.value = 'multiple';
                    args.bindingType = UpdateChanges_1.InputPropertyType.STRING;
                    break;
                case 'false':
                    args.value = 'none';
                    args.bindingType = UpdateChanges_1.InputPropertyType.STRING;
                    break;
                default:
                    args.value += ` ? 'multiple' : 'none' `;
            }
        }
        else {
            args.value = 'multiple';
        }
    });
    update.applyChanges();
});
