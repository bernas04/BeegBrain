"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const tsUtils_1 = require("../common/tsUtils");
const UpdateChanges_1 = require("../common/UpdateChanges");
const version = '6.0.1';
exports.default = () => (host, context) => __awaiter(void 0, void 0, void 0, function* () {
    context.logger.info(`Applying migration for Ignite UI for Angular to version ${version}`);
    const update = new UpdateChanges_1.UpdateChanges(__dirname, host, context);
    // update.applyChanges();
    // rename submodule imports
    for (const entryPath of update.tsFiles) {
        let content = host.read(entryPath).toString();
        if (content.indexOf('igniteui-angular/') !== -1) {
            const pos = (0, tsUtils_1.getImportModulePositions)(content, 'igniteui-angular/');
            for (let i = pos.length; i--;) {
                content = content.slice(0, pos[i].start) + 'igniteui-angular' + content.slice(pos[i].end);
            }
            host.overwrite(entryPath, content);
        }
    }
});
