"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const ts = require("typescript/lib/tsserverlibrary");
class Logger {
    constructor(traceToConsole, level) {
        this.traceToConsole = traceToConsole;
        this.level = level;
    }
    hasLevel(level) {
        return this.loggingEnabled() && this.level >= level;
    }
    loggingEnabled() {
        return this.traceToConsole;
    }
    perftrc(s) {
        this.msg(s, ts.server.Msg.Perf);
    }
    info(s) {
        this.msg(s, ts.server.Msg.Info);
    }
    msg(s, type = ts.server.Msg.Err) {
        if (!this.traceToConsole) {
            return;
        }
        if (type === ts.server.Msg.Info) {
            console.log(s);
        }
        if (type === ts.server.Msg.Err) {
            console.error(s);
        }
        if (type === ts.server.Msg.Perf) {
            console.warn(s);
        }
    }
    //#region Not implemented
    /* These methods are used to log to a file,
       we will only use the logger to log on the console.
    */
    close() { }
    startGroup() { }
    endGroup() { }
    getLogFileName() {
        return null;
    }
}
exports.Logger = Logger;
