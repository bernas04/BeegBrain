import { animate, animation, keyframes, style, transition, trigger } from '@angular/animations';
import { useAnimationIncludingChildren } from '../common/use-animation-including-children';
const rotateOutUpLeft = () => animation([
    animate('{{duration}}ms {{delay}}ms', keyframes([
        style({ opacity: 1, easing: 'ease', offset: 0 }),
        style({ opacity: 0, transform: 'rotate3d(0, 0, 1, {{degrees}}deg)', easing: 'ease', offset: 1 })
    ]))
]);
const ɵ0 = rotateOutUpLeft;
const DEFAULT_DURATION = 1000;
export function rotateOutUpLeftAnimation(options) {
    return trigger((options && options.anchor) || 'rotateOutUpLeft', [
        transition('0 => 1', [style({ 'transform-origin': 'left bottom' }), ...useAnimationIncludingChildren(rotateOutUpLeft(), options)], {
            params: {
                delay: (options && options.delay) || 0,
                duration: (options && options.duration) || DEFAULT_DURATION,
                degrees: (options && options.degrees) || -45
            }
        })
    ]);
}
export function rotateOutUpLeftOnLeaveAnimation(options) {
    return trigger((options && options.anchor) || 'rotateOutUpLeftOnLeave', [
        transition(':leave', [style({ 'transform-origin': 'left bottom' }), ...useAnimationIncludingChildren(rotateOutUpLeft(), options)], {
            params: {
                delay: (options && options.delay) || 0,
                duration: (options && options.duration) || DEFAULT_DURATION,
                degrees: (options && options.degrees) || -45
            }
        })
    ]);
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm90YXRlLW91dC11cC1sZWZ0LmFuaW1hdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9yb3RhdGluZy1leGl0cy9yb3RhdGUtb3V0LXVwLWxlZnQuYW5pbWF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUE0QixTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUcxSCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQVczRixNQUFNLGVBQWUsR0FBRyxHQUFHLEVBQUUsQ0FDM0IsU0FBUyxDQUFDO0lBQ1IsT0FBTyxDQUNMLDRCQUE0QixFQUM1QixTQUFTLENBQUM7UUFDUixLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO1FBQ2hELEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO0tBQ2pHLENBQUMsQ0FDSDtDQUNGLENBQUMsQ0FBQzs7QUFFTCxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQztBQUU5QixNQUFNLFVBQVUsd0JBQXdCLENBQUMsT0FBMEM7SUFDakYsT0FBTyxPQUFPLENBQUMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLGlCQUFpQixFQUFFO1FBQy9ELFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsQ0FBQyxFQUFFLEdBQUcsNkJBQTZCLENBQUMsZUFBZSxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBRTtZQUNqSSxNQUFNLEVBQUU7Z0JBQ04sS0FBSyxFQUFFLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO2dCQUN0QyxRQUFRLEVBQUUsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLGdCQUFnQjtnQkFDM0QsT0FBTyxFQUFFLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7YUFDN0M7U0FDRixDQUFDO0tBQ0gsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BQU0sVUFBVSwrQkFBK0IsQ0FBQyxPQUEwQztJQUN4RixPQUFPLE9BQU8sQ0FBQyxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksd0JBQXdCLEVBQUU7UUFDdEUsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxDQUFDLEVBQUUsR0FBRyw2QkFBNkIsQ0FBQyxlQUFlLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQyxFQUFFO1lBQ2pJLE1BQU0sRUFBRTtnQkFDTixLQUFLLEVBQUUsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7Z0JBQ3RDLFFBQVEsRUFBRSxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksZ0JBQWdCO2dCQUMzRCxPQUFPLEVBQUUsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTthQUM3QztTQUNGLENBQUM7S0FDSCxDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYW5pbWF0ZSwgYW5pbWF0aW9uLCBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEsIGtleWZyYW1lcywgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcblxuaW1wb3J0IHsgSUFuaW1hdGlvbk9wdGlvbnMgfSBmcm9tICcuLi9jb21tb24vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyB1c2VBbmltYXRpb25JbmNsdWRpbmdDaGlsZHJlbiB9IGZyb20gJy4uL2NvbW1vbi91c2UtYW5pbWF0aW9uLWluY2x1ZGluZy1jaGlsZHJlbic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVJvdGF0ZU91dFVwTGVmdEFuaW1hdGlvbk9wdGlvbnMgZXh0ZW5kcyBJQW5pbWF0aW9uT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBBbmdsZSAtIG51bWJlciBvZiBkZWdyZWVzIGF0IHdoaWNoIGVuZCBhbmltYXRpb24uXG4gICAqXG4gICAqIERlZmF1bHQgLTQ1XG4gICAqL1xuICBkZWdyZWVzPzogbnVtYmVyO1xufVxuXG5jb25zdCByb3RhdGVPdXRVcExlZnQgPSAoKSA9PlxuICBhbmltYXRpb24oW1xuICAgIGFuaW1hdGUoXG4gICAgICAne3tkdXJhdGlvbn19bXMge3tkZWxheX19bXMnLFxuICAgICAga2V5ZnJhbWVzKFtcbiAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAxLCBlYXNpbmc6ICdlYXNlJywgb2Zmc2V0OiAwIH0pLFxuICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3JvdGF0ZTNkKDAsIDAsIDEsIHt7ZGVncmVlc319ZGVnKScsIGVhc2luZzogJ2Vhc2UnLCBvZmZzZXQ6IDEgfSlcbiAgICAgIF0pXG4gICAgKVxuICBdKTtcblxuY29uc3QgREVGQVVMVF9EVVJBVElPTiA9IDEwMDA7XG5cbmV4cG9ydCBmdW5jdGlvbiByb3RhdGVPdXRVcExlZnRBbmltYXRpb24ob3B0aW9ucz86IElSb3RhdGVPdXRVcExlZnRBbmltYXRpb25PcHRpb25zKTogQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhIHtcbiAgcmV0dXJuIHRyaWdnZXIoKG9wdGlvbnMgJiYgb3B0aW9ucy5hbmNob3IpIHx8ICdyb3RhdGVPdXRVcExlZnQnLCBbXG4gICAgdHJhbnNpdGlvbignMCA9PiAxJywgW3N0eWxlKHsgJ3RyYW5zZm9ybS1vcmlnaW4nOiAnbGVmdCBib3R0b20nIH0pLCAuLi51c2VBbmltYXRpb25JbmNsdWRpbmdDaGlsZHJlbihyb3RhdGVPdXRVcExlZnQoKSwgb3B0aW9ucyldLCB7XG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgZGVsYXk6IChvcHRpb25zICYmIG9wdGlvbnMuZGVsYXkpIHx8IDAsXG4gICAgICAgIGR1cmF0aW9uOiAob3B0aW9ucyAmJiBvcHRpb25zLmR1cmF0aW9uKSB8fCBERUZBVUxUX0RVUkFUSU9OLFxuICAgICAgICBkZWdyZWVzOiAob3B0aW9ucyAmJiBvcHRpb25zLmRlZ3JlZXMpIHx8IC00NVxuICAgICAgfVxuICAgIH0pXG4gIF0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlT3V0VXBMZWZ0T25MZWF2ZUFuaW1hdGlvbihvcHRpb25zPzogSVJvdGF0ZU91dFVwTGVmdEFuaW1hdGlvbk9wdGlvbnMpOiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEge1xuICByZXR1cm4gdHJpZ2dlcigob3B0aW9ucyAmJiBvcHRpb25zLmFuY2hvcikgfHwgJ3JvdGF0ZU91dFVwTGVmdE9uTGVhdmUnLCBbXG4gICAgdHJhbnNpdGlvbignOmxlYXZlJywgW3N0eWxlKHsgJ3RyYW5zZm9ybS1vcmlnaW4nOiAnbGVmdCBib3R0b20nIH0pLCAuLi51c2VBbmltYXRpb25JbmNsdWRpbmdDaGlsZHJlbihyb3RhdGVPdXRVcExlZnQoKSwgb3B0aW9ucyldLCB7XG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgZGVsYXk6IChvcHRpb25zICYmIG9wdGlvbnMuZGVsYXkpIHx8IDAsXG4gICAgICAgIGR1cmF0aW9uOiAob3B0aW9ucyAmJiBvcHRpb25zLmR1cmF0aW9uKSB8fCBERUZBVUxUX0RVUkFUSU9OLFxuICAgICAgICBkZWdyZWVzOiAob3B0aW9ucyAmJiBvcHRpb25zLmRlZ3JlZXMpIHx8IC00NVxuICAgICAgfVxuICAgIH0pXG4gIF0pO1xufVxuIl19